// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name AllInOneAnimatorView
import AVFoundation
@_exported import AllInOneAnimatorView
import Foundation
import Lottie
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum FileType : Swift.String {
  case mp4
  case avi
  case mov
  case mkv
  case wmv
  case flv
  case gif
  case json
  case jpg
  case png
  case jpeg
  case bmp
  case tiff
  case webp
  case svg
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum ContentViewType {
  case withInfo(fileOrUrlName: Swift.String?, fileType: AllInOneAnimatorView.FileType, viewContentMode: UIKit.UIView.ContentMode? = nil, vedioGravity: AVFoundation.AVLayerVideoGravity? = nil, isMuted: Swift.Bool? = false)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class ContentView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public func setup(with contentType: AllInOneAnimatorView.ContentViewType)
  @_Concurrency.MainActor(unsafe) public func stopPlayer()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @objc deinit
}
extension AllInOneAnimatorView.FileType : Swift.Equatable {}
extension AllInOneAnimatorView.FileType : Swift.Hashable {}
extension AllInOneAnimatorView.FileType : Swift.RawRepresentable {}
